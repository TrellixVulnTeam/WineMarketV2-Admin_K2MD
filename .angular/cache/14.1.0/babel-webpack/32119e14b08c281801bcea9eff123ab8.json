{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../utils/auth.service\";\nconst _api = 'http://localhost:8080/api/v1/product/';\nexport let ProductService = /*#__PURE__*/(() => {\n  class ProductService {\n    constructor(http, authService) {\n      this.http = http;\n      this.authService = authService;\n    }\n\n    find(id) {\n      return this.http.get(_api + id);\n    }\n\n    getProductsLimit(_limit = 4, _page = 0, _sort = 'id', _order = 'desc', name_like = '', category_Id = '', brand_Id = '') {\n      return this.http.get(_api + '?_limit=' + _limit + '&_page=' + _page + '&_sort=' + _sort + '&_order=' + _order + '&name_like=' + name_like + '&category_Id=' + category_Id + '&brand_Id=' + brand_Id);\n    }\n\n    create(data) {\n      return this.http.post(_api, data, {\n        headers: this.authService.getHeaders()\n      });\n    }\n\n    update(data) {\n      return this.http.put(_api, data, {\n        headers: this.authService.getHeaders()\n      });\n    }\n\n    delete(id) {\n      return this.http.delete(_api + id, {\n        headers: this.authService.getHeaders()\n      });\n    }\n\n  }\n\n  ProductService.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n  };\n\n  ProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductService;\n})();","map":null,"metadata":{},"sourceType":"module"}